/=	source.hs	/^    (\/=) :: a -> a -> Bool$/;"	
==	source.hs	/^    (==) :: a -> a -> Bool$/;"	
Blue	source.hs	/^say Blue  = "You are Blue!"$/;"	
CartesianPoint2D	source.hs	/^data Point2D = CartesianPoint2D { x :: Float, y :: Float }$/;"	
Color	source.hs	/^data Color = Red | Blue | Green$/;"	
Eq	source.hs	/^class Eq a where$/;"	
Green	source.hs	/^say Green = "You are Green!"$/;"	
Point	source.hs	/^data Point = Point Float Float$/;"	
Point2D	source.hs	/^data Point2D = CartesianPoint2D { x :: Float, y :: Float }$/;"	
PolarPoint2D	source.hs	/^             | PolarPoint2D { r :: Float, theta :: Float }$/;"	
Red	source.hs	/^say Red   = "You are Red!"$/;"	
TrafficLight	source.hs	/^instance Eq TrafficLight where$/;"	
double	source.hs	/^double :: Integer -> Integer$/;"	
say	source.hs	/^say :: Color -> String$/;"	
